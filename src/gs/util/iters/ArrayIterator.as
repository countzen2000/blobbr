package gs.util.iters{		/**	 * The ArrayIterator class iterates over an array.	 * This is self-destructive - meaning it copies your	 * array to iterate over, but after you've gotten	 * through all of the elements, this iterator	 * is not usable again, because the internal	 * array is now empty.	 * 	 * <script src="http://mint.codeendeavor.com/?js" type="text/javascript"></script>	 */	final public class ArrayIterator	{		/**		 * @private		 */		protected var _array:Array;		/**		 * Constructor for ArrayIterator instances.		 * 		 * @param array	The array to iterate over.		 */		public function ArrayIterator(array:Array)		{			_array=array.concat();		}				/**		 * Check if iterator has a next element.		 */		public function hasNext():Boolean		{			return (_array.length>0);		}		/**		 * Get the next item.		 */		public function next():Object		{			return (_array.shift());		}				/**		 * Get's the next item, but doesn't remove it.		 */		public function peek():Object 		{			return (_array.length>0)?_array[0]:null;		}				/**		 * Dispose of this iterator.		 */		public function dispose():void		{			_array=null;		}	}}